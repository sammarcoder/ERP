// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
// import Header from "@/components/Header";
// import Sidebar from "@/components/Sidebar"
// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
        

//         <div className="flex min-h-screen ">
//           <Sidebar/>

//           {/* Main Content Area */}
//           <main className="flex-1 lg:ml-14 p-6 transition-all duration-300">
//             <div className="max-w-7xl mx-auto">
//               {children}
//             </div>
//           </main>
//         </div>

//       </body>
//     </html>
//   );
// }
























import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/Header";
import Sidebar from "@/components/Sidebar";
import { Providers } from "./providers";  // ← ADD THIS IMPORT

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "ERP System",  // ← UPDATED TITLE
  description: "Enterprise Resource Planning System",  // ← UPDATED DESCRIPTION
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* ← WRAP EVERYTHING WITH REDUX PROVIDER */}
        <Providers>
          <div className="flex min-h-screen">
            <Sidebar/>

            {/* Main Content Area */}
            <main className="flex-1 lg:ml-14 p-6 transition-all duration-300">
              <div className="max-w-7xl mx-auto">
                {children}
              </div>
            </main>
          </div>
        </Providers>
        {/* ← END REDUX PROVIDER WRAPPER */}
      </body>
    </html>
  );
}
